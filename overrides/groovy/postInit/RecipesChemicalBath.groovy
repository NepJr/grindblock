import gregtech.api.unification.material.Materials
import gregtech.api.unification.material.Material
import gregtech.api.unification.ore.OrePrefix

def recipeMap = mods.gregtech.chemical_bath

recipeMap.recipeBuilder()
    .fluidInputs(fluid('dye_orange') * 288)
    .inputs(ore('craftingLensGlass'))
    .outputs(metaitem('glass_lens.orange'))
    .EUt(120)
    .duration(200)
    .buildAndRegister()

recipeMap.recipeBuilder()
    .fluidInputs(fluid('dye_magenta') * 288)
    .inputs(ore('craftingLensGlass'))
    .outputs(metaitem('glass_lens.magenta'))
    .EUt(120)
    .duration(200)
    .buildAndRegister()

recipeMap.recipeBuilder()
    .fluidInputs(fluid('dye_light_blue') * 288)
    .inputs(ore('craftingLensGlass'))
    .outputs(metaitem('glass_lens.light_blue'))
    .EUt(120)
    .duration(200)
    .buildAndRegister()

recipeMap.recipeBuilder()
    .fluidInputs(fluid('dye_yellow') * 288)
    .inputs(ore('craftingLensGlass'))
    .outputs(metaitem('glass_lens.yellow'))
    .EUt(120)
    .duration(200)
    .buildAndRegister()

recipeMap.recipeBuilder()
    .fluidInputs(fluid('dye_lime') * 288)
    .inputs(ore('craftingLensGlass'))
    .outputs(metaitem('glass_lens.lime'))
    .EUt(120)
    .duration(200)
    .buildAndRegister()

recipeMap.recipeBuilder()
    .fluidInputs(fluid('dye_pink') * 288)
    .inputs(ore('craftingLensGlass'))
    .outputs(metaitem('glass_lens.pink'))
    .EUt(120)
    .duration(200)
    .buildAndRegister()

recipeMap.recipeBuilder()
    .fluidInputs(fluid('dye_gray') * 288)
    .inputs(ore('craftingLensGlass'))
    .outputs(metaitem('glass_lens.gray'))
    .EUt(120)
    .duration(200)
    .buildAndRegister()

recipeMap.recipeBuilder()
    .fluidInputs(fluid('dye_light_gray') * 288)
    .inputs(ore('craftingLensGlass'))
    .outputs(metaitem('glass_lens.light_gray'))
    .EUt(120)
    .duration(200)
    .buildAndRegister()

recipeMap.recipeBuilder()
    .fluidInputs(fluid('dye_cyan') * 288)
    .inputs(ore('craftingLensGlass'))
    .outputs(metaitem('glass_lens.cyan'))
    .EUt(120)
    .duration(200)
    .buildAndRegister()

recipeMap.recipeBuilder()
    .fluidInputs(fluid('dye_purple') * 288)
    .inputs(ore('craftingLensGlass'))
    .outputs(metaitem('glass_lens.purple'))
    .EUt(120)
    .duration(200)
    .buildAndRegister()

recipeMap.recipeBuilder()
    .fluidInputs(fluid('dye_blue') * 288)
    .inputs(ore('craftingLensGlass'))
    .outputs(metaitem('glass_lens.blue'))
    .EUt(120)
    .duration(200)
    .buildAndRegister()

recipeMap.recipeBuilder()
    .fluidInputs(fluid('dye_brown') * 288)
    .inputs(ore('craftingLensGlass'))
    .outputs(metaitem('glass_lens.brown'))
    .EUt(120)
    .duration(200)
    .buildAndRegister()

recipeMap.recipeBuilder()
    .fluidInputs(fluid('dye_green') * 288)
    .inputs(ore('craftingLensGlass'))
    .outputs(metaitem('glass_lens.green'))
    .EUt(120)
    .duration(200)
    .buildAndRegister()

recipeMap.recipeBuilder()
    .fluidInputs(fluid('dye_red') * 288)
    .inputs(ore('craftingLensGlass'))
    .outputs(metaitem('glass_lens.red'))
    .EUt(120)
    .duration(200)
    .buildAndRegister()

recipeMap.recipeBuilder()
    .fluidInputs(fluid('dye_black') * 288)
    .inputs(ore('craftingLensGlass'))
    .outputs(metaitem('glass_lens.black'))
    .EUt(120)
    .duration(200)
    .buildAndRegister()

recipeMap.recipeBuilder()
    .fluidInputs(fluid('dye_white') * 288)
    .inputs(ore('craftingLensGlass'))
    .outputs(metaitem('lensGlass'))
    .EUt(120)
    .duration(200)
    .buildAndRegister()

recipeMap.recipeBuilder()
    .fluidInputs(fluid('water') * 1000)
    .inputs(item('gbcore:blockdust'))
    .outputs(item('minecraft:clay'))
    .EUt(30)
    .duration(200)
    .buildAndRegister()